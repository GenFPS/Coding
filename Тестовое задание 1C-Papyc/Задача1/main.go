package main

import (
	"fmt"
)

/*
Задача 1


Есть строка арифметического выражения, в которой содержатся открывающие “(” и закрывающие скобки “)”.
Необходимо написать функцию, которая проверит корректность расстановки скобок.
ри этом скобки - проверяется только последовательность расставления скобок,
а операторы и операнды при проверке не учитываются
*/

// Решение 1 - через стек
func isBalanced1(str string) bool {
	var stack []rune // используем стек для проверки сбалансированности скобок
	for _, char := range str {
		switch char {
		case '(':
			stack = append(stack, char) // если встречаем открывающую скобку, добавляем ее в стек
		case ')':
			if len(stack) == 0 || stack[len(stack)-1] != '(' { // если стек пуст или последняя скобка в стеке не является соответствующей открывающей скобкой
				return false // выходим из функции и возвращаем false
			}
			stack = stack[:len(stack)-1] // в противном случае удаляем последнюю скобку из стека
		}
	}
	return len(stack) == 0 // если стек пуст, значит, скобки расставлены правильно
}

// Решение 2 - через счетчик скобок
// Данное решение актуально, если первая скобка всегда открывающаяся (т.е. "(" )
// Если нет - то нужно использовать первое решение (через стек)
func isBalanced2(str string) bool {
	counter := 0
	for i := range str {
		if string(str[i]) == "(" {
			counter++
		}
		if string(str[i]) == ")" {
			counter--
		}
	}
	return counter == 0 // если counter равен нулю, то функция вернет true, в любом другом случае -  false
}

func main() {
	// Тестовые данные:
	str := "(a + b) * c" // true
	// str := "(a + b)) * c" 	// false

	fmt.Println(isBalanced1(str))
	fmt.Println(isBalanced2(str))
}
